@page "{typeName}"
@model TypesModel
@{
    ViewData["Title"] = Model.Type.FullName;
    ViewBag.Current = "proj." + Model.AssemblyName;
}

<div class="d-flex align-items-center p-3 my-3 text-white-50 bg-purple rounded shadow-sm">
    <div class="mr-3 icon-48 icon-en48 text-uppercase">@Model.TagName</div>
    <div class="lh-100">
        <h6 class="mb-0 text-white lh-100">@Model.Type.FullName</h6>
        <small>@Model.AssemblyName</small>
    </div>
</div>

<div class="my-3 p-3 bg-white rounded shadow-sm">
    <h6 class="border-bottom border-gray pb-2 mb-0">成员列表</h6>
    @foreach (var property in Model.Type.GetProperties())
    {
        if (!property.CanRead || !property.CanWrite)
        {
            continue;
        }
        <div class="media text-muted pt-3">
            <div class="mr-2 text-white rounded position-relative" style="background-color: #28a745; font-size: 12px; width: 32px; height: 32px; overflow: hidden;">
                <span class="b-span">属性</span>
            </div>
            <div class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                <a href="#"><strong class="d-block text-gray-dark">@@@property.Name</strong></a>
                {
                @if (property.PropertyType.IsLinkable())
                {
                    <a asp-page="/Types" asp-area="@ProjectSettings.ExtensionName" asp-route-typeName="@property.PropertyType.FullName">@property.PropertyType.GetRealType()</a>
                }
                else
                {
                    <span>@property.PropertyType.GetRealType()</span>
                }
                }
                @Model.TypeDescriptor.GetPropertyDescriptor(property)?.Summary
            </div>
        </div>
    }
    <small class="d-block text-right mt-3">
        <a href="#">typescript</a>
    </small>
</div>

<div class="my-3 p-3 bg-white rounded shadow-sm">
    <ul class="nav nav-tabs border-bottom border-gray mb-0" role="tablist">
        <li class="nav-item active">
            <a class="nav-link active" id="cs-tab" data-toggle="tab" href="#cs" role="tab">C#</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="ts-tab" data-toggle="tab" href="#ts" role="tab">TypeScript</a>
        </li>
    </ul>
    <div class="tab-content">
        <div id="cs" class="media text-muted pt-3 tab-pane fade show active">
            <pre class="prettyprint border-0 linenums w-100">@Model.Type.GetClass()</pre>
        </div>
        <div id="ts" class="media text-muted pt-3 tab-pane fade">
            <pre class="prettyprint border-0 linenums w-100">@Model.Type.GetTypeScriptInterface()</pre>
        </div>
    </div>
</div>

@section footer
{
    <link rel="stylesheet" href="~/projects/lib/prettify/prettify.min.css"/>
    <script src="~/projects/lib/prettify/prettify.min.js"></script>
    <script type="text/javascript">prettyPrint();</script>
}
